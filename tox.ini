[tox]
envlist = fix_lint,
          py{35,36,37,38}{-pandas,-sso,},
          coverage
skip_missing_interpreters = true
requires =
    tox-external-wheels>=0.1.6

[testenv]
description = run the tests with pytest under {basepython}
extras =
    development
    pandas: pandas
    sso: secure-local-storage
deps =
    pip >= 19.3.1
install_command = python -m pip install -U {opts} {packages}
external_wheels =
    py35: dist/*cp35*.whl
    py36: dist/*cp36*.whl
    py37: dist/*cp37*.whl
    py38: dist/*cp38*.whl
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
    ci: SNOWFLAKE_PYTEST_OPTS = -vvv
passenv =
    AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY
    SF_PROJECT_ROOT
    cloud_provider
    SF_REGRESS_LOGS
    ; Github Actions provided environmental variables
    GITHUB_ACTIONS
    GITHUB_ACTION
    ; This is required on windows. Otherwise pwd module won't be imported successfully,
    ; see https://github.com/tox-dev/tox/issues/1455
    USERNAME
commands =
    !pandas-!sso: pytest {env:SNOWFLAKE_PYTEST_OPTS:} --cov "snowflake.connector" --junitxml {env:JUNIT_REPORT_DIR:{toxworkdir}}/junit.{envname}.xml --ignore=test/pandas --ignore=test/sso {posargs} test
    pandas: pytest {env:SNOWFLAKE_PYTEST_OPTS:} --cov "snowflake.connector" --junitxml {env:JUNIT_REPORT_DIR:{toxworkdir}}/junit.{envname}.xml {posargs} test/pandas
    sso: pytest {env:SNOWFLAKE_PYTEST_OPTS:} --cov "snowflake.connector" --junitxml {env:JUNIT_REPORT_DIR:{toxworkdir}}/junit.{envname}.xml {posargs} test/sso

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = {[testenv]deps}
       coverage
;       diff_cover
skip_install = True
passenv = DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = coverage combine
           coverage report -m
           coverage xml -o {env:COV_REPORT_DIR:{toxworkdir}}/python_connector_coverage.xml
           coverage html -d {env:COV_REPORT_DIR:{toxworkdir}}/htmlcov
;           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends = py35, py36, py37, py38, pypy, pypy3

[testenv:flake8]
; DEPRECATED
description = check code style with flake8
skip_install = true
deps = flake8
commands = flake8 {posargs}

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
passenv =
    PROGRAMDATA
deps =
    {[testenv]deps}
    pre-commit >= 1.14.4, < 2
skip_install = True
commands = pre-commit run --all-files
           python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[testenv:dev]
description = create dev environment
extras = pandas, development, sso
usedevelop = True
commands = python -m pip list --format=columns
           python -c "print(r'{envpython}')"

[pytest]
addopts = -ra --strict-markers
junit_family=legacy
markers =
    arrow: tests involving arrow format
    pandas: tests for pandas integration
    aws: tests for Amazon Cloud storage
    azure: tests for Azure Cloud storage
    gcp: tests for Google Cloud storage
    timeout: tests that need a timeout timer
    internal

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 120
known_first_party =snowflake,parameters,generate_test_files
known_third_party =Cryptodome,OpenSSL,asn1crypto,boto3,botocore,certifi,cryptography,dateutil,jwt,mock,numpy,pandas,pendulum,pkg_resources,pyasn1,pyasn1_modules,pytest,pytz,requests,setuptools,urllib3
