{
  "_args": [
    [
      {
        "raw": "@octokit/plugin-paginate-rest@^1.1.1",
        "scope": "@octokit",
        "escapedName": "@octokit%2fplugin-paginate-rest",
        "name": "@octokit/plugin-paginate-rest",
        "rawSpec": "^1.1.1",
        "spec": ">=1.1.1 <2.0.0",
        "type": "range"
      },
      "/home/mmacintyre/Snowflake/git/snowflake/.github/actions/gajira-issue-update/node_modules/@octokit/rest"
    ]
  ],
  "_from": "@octokit/plugin-paginate-rest@>=1.1.1 <2.0.0",
  "_hasShrinkwrap": false,
  "_id": "@octokit/plugin-paginate-rest@1.1.2",
  "_inCache": true,
  "_location": "/@octokit/plugin-paginate-rest",
  "_nodeVersion": "12.14.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/plugin-paginate-rest_1.1.2_1580605400548_0.8564634561424149"
  },
  "_npmUser": {
    "name": "octokitbot",
    "email": "octokitbot@martynus.net"
  },
  "_npmVersion": "6.13.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@octokit/plugin-paginate-rest@^1.1.1",
    "scope": "@octokit",
    "escapedName": "@octokit%2fplugin-paginate-rest",
    "name": "@octokit/plugin-paginate-rest",
    "rawSpec": "^1.1.1",
    "spec": ">=1.1.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@octokit/rest"
  ],
  "_resolved": "https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-1.1.2.tgz",
  "_shasum": "004170acf8c2be535aba26727867d692f7b488fc",
  "_shrinkwrap": null,
  "_spec": "@octokit/plugin-paginate-rest@^1.1.1",
  "_where": "/home/mmacintyre/Snowflake/git/snowflake/.github/actions/gajira-issue-update/node_modules/@octokit/rest",
  "bugs": {
    "url": "https://github.com/octokit/plugin-paginate-rest.js/issues"
  },
  "dependencies": {
    "@octokit/types": "^2.0.1"
  },
  "description": "Octokit plugin to paginate REST API endpoint responses",
  "devDependencies": {
    "@octokit/core": "^2.0.0",
    "@pika/pack": "^0.5.0",
    "@pika/plugin-build-node": "^0.8.1",
    "@pika/plugin-build-web": "^0.8.1",
    "@pika/plugin-ts-standard-pkg": "^0.8.1",
    "@types/fetch-mock": "^7.3.1",
    "@types/jest": "^24.0.18",
    "@types/node": "^13.1.0",
    "fetch-mock": "^8.0.0",
    "jest": "^24.9.0",
    "prettier": "^1.18.2",
    "semantic-release": "^17.0.0",
    "semantic-release-plugin-update-version-in-files": "^1.0.0",
    "ts-jest": "^24.1.0",
    "typescript": "^3.7.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-jbsSoi5Q1pj63sC16XIUboklNw+8tL9VOnJsWycWYR78TKss5PVpIPb1TUUcMQ+bBh7cY579cVAWmf5qG+dw+Q==",
    "shasum": "004170acf8c2be535aba26727867d692f7b488fc",
    "tarball": "https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-1.1.2.tgz",
    "fileCount": 19,
    "unpackedSize": 49580,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeNh/ZCRA9TVsSAnZWagAANvUQAI5dCgvRpZGkdfiz0t1E\na69o3gfwQiThi+9wNh9MY69uAXWEhdWBUkle0p4zKFna9NdzLrB2bzrFPRs9\nbdfNbsNu0V7aiOTDLsW4acqEQih9w6A0UO6JRUxw8TdgRtJdnXNXMRL+JJ3J\nzGrzseo+XXW334/CnGdRxOX+5agPtEJronVH7LmO46Tq+RiAfH8KlEjY3idp\nJLMuED8CwhHS+W+Cm4ftINcHz069waHZ92EODzL9aBWpIcfc/fGAmZ+42jtG\nhx2QqBoshCTwYuehBuPxJ0skfMPA84F8rWiAFRbatrVKIc//VKT6NNAqncZH\n9j2jDOYgwePvdRj/ucyyrGOm1lHgSU/oAC/FW5OfuXK2cik1yLGTFhbLn7lX\n0VcHnYYBYSoyNrXRQmKu9qXL4GTeAd4jzhd9ZOTnz9zsgR30FQlwh/7gHp/j\n3QiCps9SP9dYnjRjDZFgEgEr8GY61EyN0merXVI+5QaYHYY09bM560B5Drmx\nUyS9UWfwdxw+U7mY+a00szoyShPF+7Kl+RQGVFUkX6NdfdTxb5gHbByqtDpx\n/w5UrDUHq27fTp+xsU8uAwIv4cGx8mkQPhrh0lNZ5FDA5fjEwbFIsayqVX1Y\nKu3relHHBggZ1wYNfDl9Gr9HJUYLv0EfB/X3bN7Ls4lb0O9t0x41ffePd6fh\nVnmb\r\n=q1Aj\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/octokit/plugin-paginate-rest.js#readme",
  "keywords": [
    "github",
    "api",
    "sdk",
    "toolkit"
  ],
  "license": "MIT",
  "main": "dist-node/index.js",
  "maintainers": [
    {
      "name": "bkeepers",
      "email": "brandon@opensoul.org"
    },
    {
      "name": "gr2m",
      "email": "gregor@martynus.net"
    },
    {
      "name": "octokitbot",
      "email": "octokitbot@martynus.net"
    }
  ],
  "module": "dist-web/index.js",
  "name": "@octokit/plugin-paginate-rest",
  "optionalDependencies": {},
  "pika": true,
  "publishConfig": {
    "access": "public"
  },
  "readme": "# plugin-paginate-rest.js\n\n> Octokit plugin to paginate REST API endpoint responses\n\n[![@latest](https://img.shields.io/npm/v/@octokit/plugin-paginate-rest.svg)](https://www.npmjs.com/package/@octokit/plugin-paginate-rest)\n[![Build Status](https://github.com/octokit/plugin-paginate-rest.js/workflows/Test/badge.svg)](https://github.com/octokit/plugin-paginate-rest.js/actions?workflow=Test)\n[![Greenkeeper](https://badges.greenkeeper.io/octokit/plugin-paginate-rest.js.svg)](https://greenkeeper.io/)\n\n## Usage\n\n<table>\n<tbody valign=top align=left>\n<tr><th>\nBrowsers\n</th><td width=100%>\n\nLoad `@octokit/plugin-paginate-rest` and [`@octokit/core`](https://github.com/octokit/core.js) (or core-compatible module) directly from [cdn.pika.dev](https://cdn.pika.dev)\n\n```html\n<script type=\"module\">\n  import { Octokit } from \"https://cdn.pika.dev/@octokit/core\";\n  import { paginateRest } from \"https://cdn.pika.dev/@octokit/plugin-paginate-rest\";\n</script>\n```\n\n</td></tr>\n<tr><th>\nNode\n</th><td>\n\nInstall with `npm install @octokit/core @octokit/plugin-paginate-rest`. Optionally replace `@octokit/core` with a core-compatible module\n\n```js\nconst { Octokit } = require(\"@octokit/core\");\nconst { paginateRest } = require(\"@octokit/plugin-paginate-rest\");\n```\n\n</td></tr>\n</tbody>\n</table>\n\n```js\nconst MyOctokit = Octokit.plugin(paginateRest);\nconst octokit = new MyOctokit({ auth: \"secret123\" });\n\n// See https://developer.github.com/v3/issues/#list-issues-for-a-repository\nconst issues = await octokit.paginate(\"GET /repos/:owner/:repo/issues\", {\n  owner: \"octocat\",\n  repo: \"hello-world\",\n  since: \"2010-10-01\",\n  per_page: 100\n});\n```\n\n## `octokit.paginate(route, parameters, mapFunction)` or `octokit.paginate(options, mapFunction)`\n\nThe `paginateRest` plugin adds a new `octokit.paginate()` method which accepts the same parameters as [`octokit.request`](https://github.com/octokit/request.js#request). Only \"List ...\" endpoints such as [List issues for a repository](https://developer.github.com/v3/issues/#list-issues-for-a-repository) are supporting pagination. Their [response includes a Link header](https://developer.github.com/v3/issues/#response-1). For other endpoints, `octokit.paginate()` behaves the same as `octokit.request()`.\n\nThe `per_page` parameter is usually defaulting to `30`, and can be set to up to `100`, which helps retrieving a big amount of data without hitting the rate limits too soon.\n\nAn optional `mapFunction` can be passed to map each page response to a new value, usually an array with only the data you need. This can help to reduce memory usage, as only the relevant data has to be kept in memory until the pagination is complete.\n\n```js\nconst issueTitles = await octokit.paginate(\n  \"GET /repos/:owner/:repo/issues\",\n  {\n    owner: \"octocat\",\n    repo: \"hello-world\",\n    since: \"2010-10-01\",\n    per_page: 100\n  },\n  response => response.data.map(issue => issue.title)\n);\n```\n\nThe `mapFunction` gets a 2nd argument `done` which can be called to end the pagination early.\n\n```js\nconst issues = await octokit.paginate(\n  \"GET /repos/:owner/:repo/issues\",\n  {\n    owner: \"octocat\",\n    repo: \"hello-world\",\n    since: \"2010-10-01\",\n    per_page: 100\n  },\n  (response, done) => {\n    if (response.data.find(issues => issue.title.includes(\"something\"))) {\n      done();\n    }\n    return response.data;\n  }\n);\n```\n\n## `octokit.paginate.iterator(route, parameters)` or `octokit.paginate.iterator(options)`\n\nIf your target runtime environments supports async iterators (such as most modern browsers and Node 10+), you can iterate through each response\n\n```js\nconst parameters = {\n    owner: \"octocat\",\n    repo: \"hello-world\",\n    since: \"2010-10-01\",\n    per_page: 100\n  }\nfor await (const response of octokit.paginate.iterator(\"GET /repos/:owner/:repo/issues\", parameters)) {\n  // do whatever you want with each response, break out of the loop, etc.\n  console.log(response.data.title)\n}\n```\n\n## How it works\n\n`octokit.paginate()` wraps `octokit.request()`. As long as a `rel=\"next\"` link value is present in the response's `Link` header, it sends another request for that URL, and so on.\n\nMost of GitHub's paginating REST API endpoints return an array, but there are a few exceptions which return an object with a key that includes the items array.\n\n- [Search repositories](https://developer.github.com/v3/search/#example) (key `items`)\n- [List check runs for a specific ref](https://developer.github.com/v3/checks/runs/#response-3) (key: `check_runs`)\n- [List check suites for a specific ref](https://developer.github.com/v3/checks/suites/#response-1) (key: `check_suites`)\n- [List repositories](https://developer.github.com/v3/apps/installations/#list-repositories) for an installation (key: `repositories`)\n- [List installations for a user](https://developer.github.com/v3/apps/installations/#response-1) (key `installations`)\n\n`octokit.paginate()` is working around these inconsistencies so you don't have to worry about it.\n\nIf a response is lacking the `Link` header, `octokit.paginate()` still resolves with an array, even if the response returns a single object.\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/octokit/plugin-paginate-rest.js.git"
  },
  "sideEffects": false,
  "source": "dist-src/index.js",
  "types": "dist-types/index.d.ts",
  "version": "1.1.2"
}
